# -*- coding: utf-8 -*-
"""
Created on Tue Apr 13 13:58:14 2021

@author: owner
"""

import pickle

import pandas as pd  



import FeatureFetcher as FF



val_op = input("Enter 0 to scan an APK file and add it to the training dataset; enter 1 to scan an APK and check if it is malware: ")

val_apk = input("Enter the APK file's name with the .apk extention (the file must be located in ./MyApk/): ")

val_mal_check = 2

if int(val_op) == 0:
    val_mal_check = input("Enter 0 if the APK is not malware and 1 if it is: ")



x = FF.FFsettings(val_op, val_apk, val_mal_check)

x.get_features()



if int(val_op) == 1:
    #extracting the dataset for the APK file that is being scanned
    data_set = pd.read_csv("./MyData/extracted_features.csv" , encoding = "ISO-8859-1")

  

    x = data_set.drop( ["apk_file_name"], axis=1 ).values
    y = data_set["is_malware"].values

    x = pd.DataFrame(x).fillna(value=0)


    key_features = pickle.load(open("./MyData/key_feature_model.sav", 'rb'))
    x_new = key_features.transform(x)

    from sklearn.preprocessing import StandardScaler    
    st_x= StandardScaler()    
    x_new = st_x.fit_transform(x_new)   



    top_classifier = pickle.load(open("./MyData/trained_model.sav", 'rb'))

    y_new = top_classifier.predict(x_new)

    if y_new[0] == 1:
        print("This APK file was identified as malware by the classifier")
    else:
        print("This APK file was identified as benign by the classifier")




#filename = './MyData/trained_model.sav'

#loaded_model = pickle.load(open(filename, 'rb'))
#result = loaded_model.score(X_test, Y_test)
#print(result)